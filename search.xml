<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>主题功能扩展(四)</title>
      <link href="2022/02/18/update04/"/>
      <url>2022/02/18/update04/</url>
      
        <content type="html"><![CDATA[<h2 id="朋友圈"><a href="#朋友圈" class="headerlink" title="朋友圈"></a>朋友圈</h2><a class="btn-beautify button--animated " href="https://noionion.top/47095.html"   title="点击前往《友链朋友圈食用说明书》"><i class="far fa-hand-point-right"></i><span>点击前往《友链朋友圈食用说明书》</span></a><h2 id="首页文章轮番图"><a href="#首页文章轮番图" class="headerlink" title="首页文章轮番图"></a>首页文章轮番图</h2><p>使用的是冰老师教程</p><a class="btn-beautify button--animated " href="https://zfe.space/post/hexo-swiper.html"   title="点击前往《教程: hexo_swiper文章置顶插件》"><i class="far fa-hand-point-right"></i><span>点击前往《教程: hexo_swiper文章置顶插件》</span></a><h2 id="那年今日"><a href="#那年今日" class="headerlink" title="那年今日"></a>那年今日</h2><p>使用的是冰老师教程</p><a class="btn-beautify button--animated " href="https://zfe.space/post/hexo-history-calendar.html"   title="点击前往《教程：hexo-history-calendar 历史上的今天插件》"><i class="far fa-hand-point-right"></i><span>点击前往《教程：hexo-history-calendar 历史上的今天插件》</span></a><h2 id="友链样式"><a href="#友链样式" class="headerlink" title="友链样式"></a>友链样式</h2><p>使用的是糖果屋的教程</p><a class="btn-beautify button--animated " href="https://akilar.top/posts/57291286/"   title="点击前往《教程: friend_link》"><i class="far fa-hand-point-right"></i><span>点击前往《教程: friend_link》</span></a><h2 id="留言板信封样式"><a href="#留言板信封样式" class="headerlink" title="留言板信封样式"></a>留言板信封样式</h2><a class="btn-beautify button--animated " href="https://akilar.top/posts/e2d3c450/"   title="点击前往《教程: envelope style comments bar》"><i class="far fa-hand-point-right"></i><span>点击前往《教程: envelope style comments bar》</span></a><h2 id="访客信息"><a href="#访客信息" class="headerlink" title="访客信息"></a>访客信息</h2><a class="btn-beautify button--animated " href="https://cnhuazhu.gitee.io/2021/05/28/Hexo%E9%AD%94%E6%94%B9/Hexo%E6%B7%BB%E5%8A%A0%E5%BD%93%E5%89%8D%E8%AE%BF%E5%AE%A2%E4%BF%A1%E6%81%AF/"   title="点击前往《教程: hexo添加当前访客信息》"><i class="far fa-hand-point-right"></i><span>点击前往《教程: hexo添加当前访客信息》</span></a><h2 id="侧边栏倒计时"><a href="#侧边栏倒计时" class="headerlink" title="侧边栏倒计时"></a>侧边栏倒计时</h2><a class="btn-beautify button--animated " href="https://ccs.zone/post/ac26ec90.html"   title="点击前往《侧边栏倒计时小功能》"><i class="far fa-hand-point-right"></i><span>点击前往《侧边栏倒计时小功能》</span></a><h2 id="文章卡片和侧边栏透明度修改，及一些细节美化"><a href="#文章卡片和侧边栏透明度修改，及一些细节美化" class="headerlink" title="文章卡片和侧边栏透明度修改，及一些细节美化"></a>文章卡片和侧边栏透明度修改，及一些细节美化</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*修改颜色值*/</span></span><br><span class="line"><span class="comment">/*最近文章卡片*/</span></span><br><span class="line"><span class="selector-id">#recent-posts</span>&gt;<span class="selector-class">.recent-post-item</span>,<span class="selector-class">.layout_page</span>&gt;<span class="selector-tag">div</span><span class="selector-pseudo">:first</span>-child<span class="selector-pseudo">:not</span>(<span class="selector-class">.recent-posts</span>),<span class="selector-class">.layout_post</span>&gt;<span class="selector-id">#page</span>,<span class="selector-class">.layout_post</span>&gt;<span class="selector-id">#post</span>,<span class="selector-class">.read-mode</span> <span class="selector-class">.layout_post</span>&gt;<span class="selector-id">#post</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">var</span>(--light_bg_color)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#aside-content</span> <span class="selector-class">.card-widget</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">var</span>(--light_bg_color)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#post</span>,<span class="selector-id">#page</span>,<span class="selector-id">#archive</span>,<span class="selector-id">#tag</span>,<span class="selector-id">#category</span>&#123;</span><br><span class="line"><span class="attribute">background</span>: <span class="built_in">var</span>(--light_bg_color)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-pseudo">:root</span>&#123;</span><br><span class="line">--card-bg: <span class="number">#000000</span>00;</span><br><span class="line">--light_bg_color: <span class="number">#f0f3f8</span>d9</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*修改代码下拉箭头颜色  */</span></span><br><span class="line"><span class="selector-class">.fa-angle-double-down</span>:before &#123;</span><br><span class="line">    color: white;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> 主题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Butterfly添加全局吸底Aplayer教程(三)</title>
      <link href="2022/02/18/update03/"/>
      <url>2022/02/18/update03/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>如果你想使用 aplayer，很多人都会推荐安装 hexo-tag-aplayer 这款插件。这款插件通过 Hexo 独有的标籤外挂，我们可以很方便的写入一些参数，插件就会帮我们生成对应的 html。如果你只是使用一些简单的功能，其实无需使用到这个插件，只需以 html 格式书写就行，不用插件去转换。</p><p>例如：</p><p>如果使用插件，在 markdown 中要这样写</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% meting &quot;000PeZCQ1i4XVs&quot; &quot;tencent&quot; &quot;artist&quot; &quot;theme:#3F51B5&quot; &quot;mutex:true&quot; &quot;preload:auto&quot; %&#125;</span><br></pre></td></tr></table></figure><p>其会被插件渲染为</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;aplayer-uxAIfEUs&quot;</span> <span class="attr">class</span>=<span class="string">&quot;aplayer aplayer-tag-marker meting-tag-marker&quot;</span> <span class="attr">data-id</span>=<span class="string">&quot;000PeZCQ1i4XVs&quot;</span> <span class="attr">data-server</span>=<span class="string">&quot;tencent&quot;</span> <span class="attr">data-type</span>=<span class="string">&quot;artist&quot;</span> <span class="attr">data-mode</span>=<span class="string">&quot;circulation&quot;</span> <span class="attr">data-autoplay</span>=<span class="string">&quot;false&quot;</span> <span class="attr">data-mutex</span>=<span class="string">&quot;true&quot;</span> <span class="attr">data-listmaxheight</span>=<span class="string">&quot;340px&quot;</span> <span class="attr">data-preload</span>=<span class="string">&quot;auto&quot;</span> <span class="attr">data-theme</span>=<span class="string">&quot;#3F51B5&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>如果我们不想使用插件，就需要在markdown中用html的格式书写，同时把主题配置文件中的aplayerInject开启</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;aplayer&quot;</span> <span class="attr">data-id</span>=<span class="string">&quot;000PeZCQ1i4XVs&quot;</span> <span class="attr">data-server</span>=<span class="string">&quot;tencent&quot;</span> <span class="attr">data-type</span>=<span class="string">&quot;artist&quot;</span> <span class="attr">data-mutex</span>=<span class="string">&quot;true&quot;</span> <span class="attr">data-preload</span>=<span class="string">&quot;auto&quot;</span> <span class="attr">data-theme</span>=<span class="string">&quot;#3F51B5&quot;</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>这样我们就可以不用使用多一个插件，当然这种东西见仁见智，选自己喜欢的就行。</p><p>回到正题，这篇文章将教大家如何在Butterfly上使用全局吸底 Aplayer</p><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/butterfly-aplayer-xidi.gif"></p><h2 id="关闭asset-inject"><a href="#关闭asset-inject" class="headerlink" title="关闭asset_inject"></a>关闭asset_inject</h2><p>此步骤适用于安装了 hexo-tag-aplayer 插件的人</p><p>由于需要全局都插入 aplayer 和 meting 资源，为了防止插入重复的资源，需要把 asset_inject 设为 false</p><p>在 Hexo 的配置文件中</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">aplayer:</span></span><br><span class="line">  <span class="attr">meting:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">asset_inject:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><h2 id="开启主题的-aplayerInject"><a href="#开启主题的-aplayerInject" class="headerlink" title="开启主题的 aplayerInject"></a>开启主题的 aplayerInject</h2><p>在主题的配置文件中，enable 设为 true 和 per_page 设为 true</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Inject the css and script (aplayer/meting)</span></span><br><span class="line"><span class="attr">aplayerInject:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">per_page:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h2 id="插入-Aplayer-html"><a href="#插入-Aplayer-html" class="headerlink" title="插入 Aplayer html"></a>插入 Aplayer html</h2><p>为了适配 hexo-tag-aplayer，主题内置的 Meting js 仍为 1.2 版本，并非最新的 2.x 版本。</p><p>Aplayer html 例子：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&lt;div</span> <span class="string">class=&quot;aplayer</span> <span class="literal">no</span><span class="string">-destroy&quot;</span> <span class="string">data-id=&quot;60198&quot;</span> <span class="string">data-server=&quot;netease&quot;</span> <span class="string">data-type=&quot;playlist&quot;</span> <span class="string">data-fixed=&quot;true&quot;</span> <span class="string">data-autoplay=&quot;true&quot;&gt;</span> <span class="string">&lt;/div&gt;</span></span><br></pre></td></tr></table></figure><p>require 代表着这些参数是必须要使用的，其它的参数则可以根据自己需要配置。</p><p>配置全局吸底，data-fixed 和 data-mini 也必须配置，配置为 true</p><p>如果使用 Pjax，则在 class 里需添加 no-destroy，这样防止切换页面时 Aplayer 被销毁</p><p>把 aplayer代码 插入到主题配置文件的 inject.bottom 去</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">head:</span></span><br><span class="line">  <span class="attr">bottom:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;div</span> <span class="string">class=&quot;aplayer</span> <span class="literal">no</span><span class="string">-destroy&quot;</span> <span class="string">data-id=&quot;60198&quot;</span> <span class="string">data-server=&quot;netease&quot;</span> <span class="string">data-type=&quot;playlist&quot;</span> <span class="string">data-fixed=&quot;true&quot;</span> <span class="string">data-autoplay=&quot;true&quot;&gt;</span> <span class="string">&lt;/div&gt;</span></span><br></pre></td></tr></table></figure><p>运行 Hexo 就可以看到网页左下角出现了 Aplayer</p><p>最后，如果你想切换页面时，音乐不会中断。请把主题配置文件的 pjax 设为 true</p>]]></content>
      
      
      
        <tags>
            
            <tag> 主题 </tag>
            
            <tag> 音乐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>主题安装进阶教程(二)</title>
      <link href="2022/02/18/update02/"/>
      <url>2022/02/18/update02/</url>
      
        <content type="html"><![CDATA[<h2 id="建议"><a href="#建议" class="headerlink" title="建议"></a>建议</h2><p>不要把个人需要的文件/图片放在主题source文件夹里，因为在升级主题的过程中，可能会把文件覆盖删除了。<br>在Hexo根目录的source文件夹里，创建一个文件夹来放置个人文件/图片。<br>引用文件直接为/文件夹名称/文件名</p><h2 id="音乐"><a href="#音乐" class="headerlink" title="音乐"></a>音乐</h2><p>音乐界面使用了插件 hexo-tag-aplayer<br>使用方法请参考插件文档</p><p>音乐页面只是普通的page页，按普通页面操作生成就行。</p><p>以下内容可供选择配置</p><p>注意： 仍需要安装插件hexo-tag-aplayer</p><p>插件会在每一个文件都插入 js 和 css，为了避免这一情况，3.0 版本内置了 aplayer 需要的 css 和 js。</p><p>首先在Hexo根目录_config里配置asset_inject为false</p><p>YAML</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">aplayer:</span></span><br><span class="line">  <span class="attr">asset_inject:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><p>然后在你需要使用aplayer的页面Front-matter添加</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">aplayer:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>这样只会在需要aplayer的页面插入js和css。</p><p>如何添加全局 Aplayer 播放，请参考 我的博客安装文档butterfly全局安装音乐插件(三)</p><p>同时你也可以使用百度云音乐外链</p><h2 id="电影"><a href="#电影" class="headerlink" title="电影"></a>电影</h2><p>电影界面使用了插件 hexo-butterfly-douban<br>使用方法请参考插件的文档。</p><p>注意：</p><p>hexo-butterfly-douban 会主动生成页面，所以不需要自己创建。<br>如遇到无法抓取问题，显示 INFO 0 movies have been loaded in xxx ms, because you are offline or your network is bad<br>请过段时间再试试，这我也无能为力。</p><h2 id="icon"><a href="#icon" class="headerlink" title="icon"></a>icon</h2><p>Butterfly主题内置了Font Awesome V5 图标，目前已更新到 5.13.0，总共有1,588个免费图标。由于是国外的图标网站，对于国内的一些网站Icon并不支持。如有需要，你可以引入其它的图标服务商。</p><h3 id="iconfont"><a href="#iconfont" class="headerlink" title="iconfont"></a>iconfont</h3><p>国内最出名的莫过于iconfont,功能很强大且图标内容很丰富的矢量图标库。很多Font Awesome不支持的图标都可以在这里找到。同时，iconfont支持选择需要的图标生成css链接，减少不必要的CSS加载。</p><h3 id="注册账号"><a href="#注册账号" class="headerlink" title="注册账号"></a>注册账号</h3><p>打开iconfont的网站，点击导航栏的人像图标，会跳出註册界面，按要求註册账号。</p><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/butterfly-iconfont.png"></p><h3 id="添加图标入库"><a href="#添加图标入库" class="headerlink" title="添加图标入库"></a>添加图标入库</h3><p>选择自己需要的图标，把鼠标移到图标上，会显示三个按钮（依次是添加入库、收藏和下载），而我们需要的是把图标添加入库</p><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/butterfly-iconfont-add.png"></p><p>添加入库后，你可以看到网站右上角购物车图标显示了1字，代表图标已经添加入库，点击购物车图标，会弹出侧边栏显示详情。</p><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/butterfly-iconfont-check.png"></p><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/butterfly-iconfont-detail.png"></p><p>已选择的图标会显示在上面，你可以重复上面的操作，把需要的图标添加入库，然后点击添加到项目。</p><p>接下来会要求选择项目名称，没有的自己创建一个。</p><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/butterfly-iconfont-create.png"></p><h3 id="生成CSS链接"><a href="#生成CSS链接" class="headerlink" title="生成CSS链接"></a>生成CSS链接</h3><p>在添加到项目之后，会跳到项目的详情界面。点击Font class，然后再点击暂无代码，点击生成文字。网站会自动生成CSS链接，我们只需要复製链接就行。</p><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/butterfly-iconfont-link.png"></p><h3 id="添加链接进主题配置文件"><a href="#添加链接进主题配置文件" class="headerlink" title="添加链接进主题配置文件"></a>添加链接进主题配置文件</h3><p>打开主题配置文件，找到inject配置，按要求把链接填入</p><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/butterfly-iconfont-setting.png"></p><p>在我们需要使用的地方填入icon，例如Menu，图片使用格式为iconfont icon名字</p><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/butterfly-iconfont-setting-menu.png"></p><p>运行Butterfly之后，你就可以看到menu的图标生效了</p><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/butterfly-iconfont-show.png"></p><h2 id="图片压缩"><a href="#图片压缩" class="headerlink" title="图片压缩"></a>图片压缩</h2><p>Butterfly主题需要使用到很多图片。如果图片太大，会严重拖慢网站的加载速度。</p><p>图片压缩能够有效的缓解这个问题。</p><p>除了通过gulp-imagemin来压缩图片，还可以通过在綫压缩网站和软件来进行压缩。以下两款是我自己正在使用的工具。网上有很多这样的工具，挑选一款适合自己的就行。</p><p>imgbot</p><p>imgbot 是一款 Github 插件。</p><p>安装后，你上传图片到 Github 去，imgbot 会自动压缩图片并推送 PR，我们只需要合併 PR 就行</p><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/butterfly-enhance-imgbot.png"></p><p>你可以配置 imgbot 的侦测方法、压缩方法（有损/无损)，具体可以查看插件的文档</p>]]></content>
      
      
      
        <tags>
            
            <tag> 主题 </tag>
            
            <tag> butterfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的主题安装文档(-)</title>
      <link href="2022/02/18/update01/"/>
      <url>2022/02/18/update01/</url>
      
        <content type="html"><![CDATA[<h2 id="主题代码-config-butterfly-yml介绍"><a href="#主题代码-config-butterfly-yml介绍" class="headerlink" title="主题代码_config.butterfly.yml介绍"></a>主题代码_config.butterfly.yml介绍</h2><h3 id="导航菜单"><a href="#导航菜单" class="headerlink" title="导航菜单"></a>导航菜单</h3><p>修改 主題配置文件</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">Home:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-home</span></span><br><span class="line"><span class="attr">Archives:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-archive</span></span><br><span class="line"><span class="attr">Tags:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-tags</span></span><br><span class="line"><span class="attr">Categories:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-folder-open</span></span><br><span class="line"><span class="string">List||fas</span> <span class="attr">fa-list:</span></span><br><span class="line">  <span class="attr">Music:</span> <span class="string">/music/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-music</span></span><br><span class="line">  <span class="attr">Movie:</span> <span class="string">/movies/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-video</span></span><br><span class="line"><span class="attr">Link:</span> <span class="string">/link/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-link</span></span><br><span class="line"><span class="attr">About:</span> <span class="string">/about/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-heart</span></span><br></pre></td></tr></table></figure><p>必须是 /xxx/，后面||分开，然后写图标名。</p><p>如果不希望显示图标，图标名可不写。</p><p>默认子目录是展开的，如果你想要隐藏，在子目录里添加 hide 。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">List||fas</span> <span class="string">fa-list||hide:</span></span><br><span class="line">  <span class="attr">Music:</span> <span class="string">/music/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-music</span></span><br><span class="line">  <span class="attr">Movie:</span> <span class="string">/movies/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-video</span></span><br></pre></td></tr></table></figure><p>注意： 导航的文字可自行更改</p><p>例如：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  首页: / || fas fa-home</span><br><span class="line">  时间轴: /archives/ || fas fa-archive</span><br><span class="line">  标籤: /tags/ || fas fa-tags</span><br><span class="line">  分类: /categories/ || fas fa-folder-open</span><br><span class="line">  清单||fa fa-heartbeat:</span><br><span class="line"><span class="code">    音乐: /music/ || fas fa-music</span></span><br><span class="line"><span class="code">    照片: /Gallery/ || fas fa-images</span></span><br><span class="line"><span class="code">    电影: /movies/ || fas fa-video</span></span><br><span class="line"><span class="code">  友链: /link/ || fas fa-link</span></span><br><span class="line"><span class="code">  关于: /about/ || fas fa-heart</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-menu.png"></p><h3 id="社交图标设置"><a href="#社交图标设置" class="headerlink" title="社交图标设置"></a>社交图标设置</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">social:</span></span><br><span class="line">  <span class="attr">fab fa-github:</span> <span class="string">https://github.com/2829590913</span> <span class="string">||</span> <span class="string">Github</span></span><br><span class="line">  <span class="attr">fas fa-envelope:</span> <span class="string">mailto:2829590913@qq.com</span> <span class="string">||</span> <span class="string">Email</span></span><br><span class="line">  <span class="attr">fas fa-rss:</span> <span class="string">https://json25-blog.club/atom.xml</span> <span class="string">||</span> <span class="string">RSS</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-social-icon-pc.png"></p><h3 id="代码展开与否"><a href="#代码展开与否" class="headerlink" title="代码展开与否"></a>代码展开与否</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">highlight_shrink:</span> <span class="literal">true</span> <span class="comment">#代码框不展开，需点击 &#x27;&gt;&#x27; 打开</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-highlight-shrink-true.png"></p><h3 id="图片设置"><a href="#图片设置" class="headerlink" title="图片设置"></a>图片设置</h3><h4 id="顶部图"><a href="#顶部图" class="headerlink" title="顶部图"></a>顶部图</h4><p>如果不要显示顶部图，可直接配置 disable_top_img: true</p><p>配置中的值：</p><table><thead><tr><th>配置</th><th align="left">解释</th></tr></thead><tbody><tr><td>index_img</td><td align="left">主页的 top_img</td></tr><tr><td>default_top_img</td><td align="left">默认的 top_img，当页面的 top_img 没有配置时，会显示 default_top_img</td></tr><tr><td>archive_img</td><td align="left">归档页面的 top_img</td></tr><tr><td>tag_img</td><td align="left">子页面 的 默认 top_img</td></tr><tr><td>tag_per_img</td><td align="left">子页面的 top_img，可配置每个 tag 的 top_img</td></tr><tr><td>category_img</td><td align="left">category 子页面 的 默认 top_img</td></tr><tr><td>category_per_img</td><td align="left">category 子页面的 top_img，可配置每个 category 的 top_img</td></tr></tbody></table><p>其它页面 （tags/categories/自建页面）和 文章页 的 top_img ，请到对应的 md 页面设置front-matter中的top_img</p><p>以上所有的 top_img 可配置以下值：</p><p>3.2.0 以下版本的配置只支持</p><p>留空，true 和 false - 显示默认的顔色<br>img链接 - 显示所配置的图片</p><table><thead><tr><th>配置的值</th><th>效果</th></tr></thead><tbody><tr><td>留空</td><td>显示默认的top_img（如有），否则显示默认的顔色</td></tr><tr><td>img链接</td><td>图片的链接，显示所配置的图片</td></tr><tr><td>顔色(<br/>HEX值 - #0000FF<br/>RGB值 - rgb(0,0,255)<br/>顔色单词 - orange<br/>渐变色 - linear-gradient( 135deg, #E2B0FF 10%, #9F44D3 100%)<br/>）</td><td>对应的顔色</td></tr><tr><td>transparent</td><td>透明</td></tr><tr><td>false</td><td>不显示 top_img</td></tr></tbody></table><h3 id="文章置顶"><a href="#文章置顶" class="headerlink" title="文章置顶"></a>文章置顶</h3><p>【推荐】hexo-generator-index从 2.0.0 开始，已经支持文章置顶功能。你可以直接在文章的front-matter区域里添加sticky: 1属性来把这篇文章置顶。数值越大，置顶的优先级越大。</p><h3 id="文章封面"><a href="#文章封面" class="headerlink" title="文章封面"></a>文章封面</h3><p>文章的markdown文档上,在Front-matter添加cover,并填上要显示的图片地址。<br>如果不配置cover,可以设置显示默认的cover.</p><p>如果不想在首页显示cover,可以设置为false</p><p>修改 主题配置文件</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">cover:</span></span><br><span class="line">  <span class="comment"># 是否显示文章封面</span></span><br><span class="line">  <span class="attr">index_enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">aside_enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">archives_enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># 封面显示的位置</span></span><br><span class="line">  <span class="comment"># 三个值可配置 left , right , both</span></span><br><span class="line">  <span class="attr">position:</span> <span class="string">both</span></span><br><span class="line">  <span class="comment"># 当没有设置cover时，默认的封面显示</span></span><br><span class="line">  <span class="attr">default_cover:</span> </span><br></pre></td></tr></table></figure><p>当配置多张图片时,会随机选择一张作为cover.此时写法应为</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">default_cover:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/cover/default_bg.png</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/cover/default_bg2.png</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">https://cdn.jsdelivr.net/gh/jerryc127/CDN@latest/cover/default_bg3.png</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-post-cover.png"></p><h3 id="文章相关配置"><a href="#文章相关配置" class="headerlink" title="文章相关配置"></a>文章相关配置</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">post_meta:</span></span><br><span class="line">  <span class="attr">page:</span></span><br><span class="line">    <span class="attr">date_type:</span> <span class="string">both</span> <span class="comment"># created or updated or both 主页文章日期是创建日或者更新日或都显示</span></span><br><span class="line">    <span class="attr">date_format:</span> <span class="string">relative</span> <span class="comment"># date/relative 显示日期还是相对日期</span></span><br><span class="line">    <span class="attr">categories:</span> <span class="literal">true</span> <span class="comment"># true or false 主页是否显示分类</span></span><br><span class="line">    <span class="attr">tags:</span> <span class="literal">true</span> <span class="comment"># true or false 主页是否显示标籤</span></span><br><span class="line">    <span class="attr">label:</span> <span class="literal">true</span> <span class="comment"># true or false 显示描述性文字</span></span><br><span class="line">  <span class="attr">post:</span></span><br><span class="line">    <span class="attr">date_type:</span> <span class="string">both</span> <span class="comment"># created or updated or both 文章页日期是创建日或者更新日或都显示</span></span><br><span class="line">    <span class="attr">date_format:</span> <span class="string">relative</span> <span class="comment"># date/relative 显示日期还是相对日期</span></span><br><span class="line">    <span class="attr">categories:</span> <span class="literal">true</span> <span class="comment"># true or false 文章页是否显示分类</span></span><br><span class="line">    <span class="attr">tags:</span> <span class="literal">true</span> <span class="comment"># true or false 文章页是否显示标籤</span></span><br><span class="line">    <span class="attr">label:</span> <span class="literal">true</span> <span class="comment"># true or false 显示描述性文字</span></span><br></pre></td></tr></table></figure><h3 id="文章打赏"><a href="#文章打赏" class="headerlink" title="文章打赏"></a>文章打赏</h3><p>在你每篇文章的结尾，可以添加打赏按钮。相关二维码可以自行配置。</p><p>对于没有提供二维码的，可配置一张软件的icon图片，然后在link上添加相应的打赏链接。用户点击图片就会跳转到链接去。</p><p>link可以不写，会默认为图片的链接。</p><p>修改 主题配置文件</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">reward:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">QR_code:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">img:</span> <span class="string">/img/wechat.jpg</span></span><br><span class="line">      <span class="attr">link:</span></span><br><span class="line">      <span class="attr">text:</span> <span class="string">微信</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">img:</span> <span class="string">/img/alipay.jpg</span></span><br><span class="line">      <span class="attr">link:</span></span><br><span class="line">      <span class="attr">text:</span> <span class="string">支付宝</span></span><br></pre></td></tr></table></figure><h3 id="toc"><a href="#toc" class="headerlink" title="toc"></a>toc</h3><p>在文章页，会有一个目录，用于显示TOC。</p><p>修改 主题配置文件</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">toc:</span></span><br><span class="line">  <span class="attr">post:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">page:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">number:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">expand:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">style_simple:</span> <span class="literal">false</span> <span class="comment"># for post</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>属性</th><th>解释</th></tr></thead><tbody><tr><td>post</td><td>文章页是否显示 TOC</td></tr><tr><td>page</td><td>普通页面是否显示 TOC</td></tr><tr><td>number</td><td>是否显示章节数</td></tr><tr><td>expand</td><td>是否展开 TOC</td></tr><tr><td>style_simple</td><td>简洁模式（侧边栏只显示 TOC, 只对文章页有效 ）</td></tr></tbody></table><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-toc-pc-new.png"></p><h3 id="页脚设置"><a href="#页脚设置" class="headerlink" title="页脚设置"></a>页脚设置</h3><h4 id="博客年份"><a href="#博客年份" class="headerlink" title="博客年份"></a>博客年份</h4><p>since是一个来展示你站点起始时间的选项。它位于页面的最底部。</p><p>修改 主题配置文件</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">footer:</span></span><br><span class="line">  <span class="attr">owner:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">since:</span> <span class="number">2018</span></span><br></pre></td></tr></table></figure><h3 id="右下角设置"><a href="#右下角设置" class="headerlink" title="右下角设置"></a>右下角设置</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">translate:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># 默认按钮显示文字(网站是简体，应设置为&#x27;default: 繁&#x27;)</span></span><br><span class="line">  <span class="attr">default:</span> <span class="string">简</span></span><br><span class="line">  <span class="comment">#网站默认语言，1: 繁体中文, 2: 简体中文</span></span><br><span class="line">  <span class="attr">defaultEncoding:</span> <span class="number">1</span></span><br><span class="line">  <span class="comment">#延迟时间,若不在前, 要设定延迟翻译时间, 如100表示100ms,默认为0</span></span><br><span class="line">  <span class="attr">translateDelay:</span> <span class="number">0</span></span><br><span class="line">  <span class="comment">#当文字是简体时，按钮显示的文字</span></span><br><span class="line">  <span class="attr">msgToTraditionalChinese:</span> <span class="string">&quot;繁&quot;</span></span><br><span class="line">  <span class="comment">#当文字是繁体时，按钮显示的文字</span></span><br><span class="line">  <span class="attr">msgToSimplifiedChinese:</span> <span class="string">&quot;简&quot;</span></span><br></pre></td></tr></table></figure><h3 id="侧边栏设置"><a href="#侧边栏设置" class="headerlink" title="侧边栏设置"></a>侧边栏设置</h3><p>可自行决定哪个项目需要显示，可决定位置，也可以设置不显示侧边栏。</p><p>修改 主题配置文件</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">aside:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">hide:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">button:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">mobile:</span> <span class="literal">true</span> <span class="comment"># 手机页面（ 显示宽度 &lt; 768px ）是否显示aside内容</span></span><br><span class="line">  <span class="attr">position:</span> <span class="string">right</span> <span class="comment"># left or right</span></span><br><span class="line">  <span class="attr">card_author:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">description:</span></span><br><span class="line">    <span class="attr">button:</span></span><br><span class="line">      <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">icon:</span> <span class="string">fab</span> <span class="string">fa-github</span></span><br><span class="line">      <span class="attr">text:</span> <span class="string">Github</span></span><br><span class="line">      <span class="attr">link:</span> <span class="string">https://github.com/jerryc127/hexo-theme-butterfly</span></span><br><span class="line">  <span class="attr">card_announcement:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">content:</span> <span class="string">This</span> <span class="string">is</span> <span class="string">my</span> <span class="string">Blog</span></span><br><span class="line">  <span class="attr">card_recent_post:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">limit:</span> <span class="number">5</span> <span class="comment"># if set 0 will show all</span></span><br><span class="line">    <span class="attr">sort:</span> <span class="string">date</span> <span class="comment"># date or updated</span></span><br><span class="line">  <span class="attr">card_categories:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">limit:</span> <span class="number">8</span> <span class="comment"># if set 0 will show all</span></span><br><span class="line">    <span class="attr">expand:</span> <span class="string">none</span> <span class="comment"># none/true/false</span></span><br><span class="line">  <span class="attr">card_tags:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">limit:</span> <span class="number">40</span> <span class="comment"># if set 0 will show all</span></span><br><span class="line">    <span class="attr">color:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">card_archives:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">monthly</span> <span class="comment"># yearly or monthly</span></span><br><span class="line">    <span class="attr">format:</span> <span class="string">MMMM</span> <span class="string">YYYY</span> <span class="comment"># eg: YYYY年MM月</span></span><br><span class="line">    <span class="attr">order:</span> <span class="number">-1</span> <span class="comment"># Sort of order. 1, asc for ascending; -1, desc for descending</span></span><br><span class="line">    <span class="attr">limit:</span> <span class="number">8</span> <span class="comment"># if set 0 will show all</span></span><br><span class="line">  <span class="attr">card_webinfo:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">post_count:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">last_push_date:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h3 id="网站背景"><a href="#网站背景" class="headerlink" title="网站背景"></a>网站背景</h3><p>默认显示白色，可设置图片或者颜色</p><p>修改 主题配置文件</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 图片格式 url(http://xxxxxx.com/xxx.jpg)</span></span><br><span class="line"><span class="comment"># 颜色（HEX值/RGB值/顔色单词/渐变色)</span></span><br><span class="line"><span class="comment"># 留空 不显示背景</span></span><br><span class="line"><span class="attr">background:</span></span><br></pre></td></tr></table></figure><p>留意: 如果你的网站根目录不是’/‘,使用本地图片时，需加上你的根目录。<br>例如：网站是 <a href="https://yoursite.com/blog,%E5%BC%95%E7%94%A8%E4%B8%80%E5%BC%A0img/xx.png%E5%9B%BE%E7%89%87%EF%BC%8C%E5%88%99%E8%AE%BE%E7%BD%AEbackground%E4%B8%BA">https://yoursite.com/blog,引用一张img/xx.png图片，则设置background为</a> `url(/blog/img/xx.png)</p><p>示例：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">background:&#x27;#49B202&#x27;</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-set-body-background-color.png"></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">background:</span> <span class="string">url(https://i.loli.net/2019/09/09/5oDRkWVKctx2b6A.png)</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/hexo-theme-butterfly-doc-set-body-background-img.png"></p><h3 id="inject"><a href="#inject" class="headerlink" title="inject"></a>inject</h3><p>2.3.0以上支持</p><p>如想添加额外的js/css/meta等等东西，可以在Inject里添加，支持添加到head(</body>标籤之前)和bottom(</html>标籤之前)。</p><p>请注意：以标準的html格式添加内容</p><p>例如</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">head:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&lt;link</span> <span class="string">rel=&quot;stylesheet&quot;</span> <span class="string">href=&quot;/self.css&quot;&gt;</span></span><br><span class="line">  <span class="attr">bottom:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">src=&quot;xxxx&quot;&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><p>留意: 如果你的网站根目录不是’/‘,使用本地图片时，需加上你的根目录。<br>例如：网站是 <a href="https://yoursite.com/blog,%E5%BC%95%E7%94%A8css/xx.css%EF%BC%8C%E5%88%99%E8%AE%BE%E7%BD%AE%E4%B8%BA">https://yoursite.com/blog,引用css/xx.css，则设置为</a><link rel="stylesheet" href="/blog/css/xx.css"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 主题 </tag>
            
            <tag> butterfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>完全避坑！将hexo博客部署到云服务器</title>
      <link href="2022/02/17/nginx/"/>
      <url>2022/02/17/nginx/</url>
      
        <content type="html"><![CDATA[<p>之前趁着阿里云的轻量服务器打折，入手了一台服务器，既然有了服务器自然不能让它闲着，这里记录一下把博客部署到云服务器上的过程。</p><h2 id="准备条件"><a href="#准备条件" class="headerlink" title="准备条件"></a>准备条件</h2><p>1.云服务器（阿里云/腾讯云/其他）。<br>2.（可选）域名。如果选择国内服务器，需要进行icp备案。<br>3.nginx、 git、nodejs。<br>4.现有的hexo博客。（如果没有，可以参考 将《使用hexo搭建个人博客》</p><h2 id="开始配置"><a href="#开始配置" class="headerlink" title="开始配置"></a>开始配置</h2><p>以centOs系统为例</p><h3 id="配置控制台安全组规则"><a href="#配置控制台安全组规则" class="headerlink" title="配置控制台安全组规则"></a>配置控制台安全组规则</h3><p>在阿里云控制台下云服务器的安全组规则中添加80端口（http）和443端口（https）。</p><p>当然，如果想使用域名访问，那么域名必须先备案，否则端口会被限制。</p><h3 id="配置服务器环境"><a href="#配置服务器环境" class="headerlink" title="配置服务器环境"></a>配置服务器环境</h3><p>通常选择的是nginx。</p><p>Nginx是一款轻量级的Web 服务器/反向代理服务器及电子邮件（IMAP/POP3）代理服务器，在BSD-like 协议下发行。其特点是占有内存少，并发能力强。—-百度百科</p><p>使用yum安装nginx：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y nginx</span><br></pre></td></tr></table></figure><p>启动nginx服务器：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl start nginx</span><br><span class="line">systemctl <span class="built_in">enable</span> nginx</span><br></pre></td></tr></table></figure><p>启动之后，就可以使用服务器的公网ip访问网站了。成功访问即代表成功。</p><p><img src="https://ccs-zone.oss-cn-beijing.aliyuncs.com/105/image-20210806234853640.png"></p><p>如果看到的页面不一样，是因为nginx对于不同的linux发行版提供的版本不一样，因此初始页面也不一样，总之只要能访问到页面就算成功。</p><h3 id="设置博客目录"><a href="#设置博客目录" class="headerlink" title="设置博客目录"></a>设置博客目录</h3><p>在你想要存放博客目录的地址下创建文件夹，比如：/home/hexo</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home</span><br><span class="line">mkdir hexo</span><br></pre></td></tr></table></figure><p>然后赋权。这步很重要，可能影响到部署。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod -R 777 hexo</span><br></pre></td></tr></table></figure><h3 id="配置路由"><a href="#配置路由" class="headerlink" title="配置路由"></a>配置路由</h3><p>我们需要配置nginx的配置文件，其通常是/etc/nginx下的nginx.conf（centOs）。</p><p>我们先不急着打开这个文件，因为我并不建议直接配置这个文件，我们应该先创建一个新的文件，然后采用include的方式，将这个文件包含进nginx.conf中。 (14条消息) 从零搭建Hexo博客并部署阿里云服务器（奶妈级教学）_Object的博客-CSDN博客_阿里云搭建hexo</p><p>因此，在/etc/nginx/目录下创建一个文件夹 叫 vhost，在其中创建一个文件blog.conf。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /etc/nginx</span><br><span class="line">mkdir vhost &amp;&amp; <span class="built_in">cd</span> vhost</span><br><span class="line">vim blog.conf</span><br></pre></td></tr></table></figure><p>写入以下内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">server&#123;</span><br><span class="line">listen    80;</span><br><span class="line">root xxx;</span><br><span class="line">server_name xxx;</span><br><span class="line">location /&#123;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中，root一行的xxx改为存放你博客目录存放的地址，如: home\hexo；server_name一行的xxx改为你的域名或服务器公网ip。注意空格。</p><p>保存后退出。然后需要打开/etc/nginx/目录下的nginx.conf文件<br>vim /etc/nginx/nginx.conf</p><p>按图include刚才修改blog配置文件</p><p><img src="https://ccs-zone.oss-cn-beijing.aliyuncs.com/105/image-20210816124538349.png"></p><p>但是注意，此时只能用http访问！（巨大的坑）</p><h3 id="添加https访问"><a href="#添加https访问" class="headerlink" title="添加https访问"></a>添加https访问</h3><p>首先申请一个ssl证书（可以申请阿里云免费的一年ssl证书，过程查询官网）</p><p>申请成功后得到两个文件：xxx.xxx.pem和xxx.xxx.key.</p><p>在服务器nginx安装路径下新建一个cert文件夹，并通过ssh将这两个文件上传至此文件夹</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir cert &amp;&amp; <span class="built_in">cd</span> cert </span><br></pre></td></tr></table></figure><p>然后需要修改nginx.conf，在http段中的server按如下修改，部分代码所示：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">    # Load modular configuration files from the /etc/nginx/conf.d directory.</span><br><span class="line">    # See http://nginx.org/en/docs/ngx_core_module.html#include</span><br><span class="line">    # for more information.</span><br><span class="line">    include /etc/nginx/conf.d/*.conf;</span><br><span class="line">    # for more information.</span><br><span class="line">    include /etc/nginx/conf.d/*.conf;</span><br><span class="line">    include /etc/nginx/vhost/*.conf;</span><br><span class="line">    server &#123;</span><br><span class="line"></span><br><span class="line">        listen       443 ssl;</span><br><span class="line">        listen       80 default_server;</span><br><span class="line">        listen       [::]:80 default_server;</span><br><span class="line">        server_name   ccs.zone;</span><br><span class="line">        root         /home/hexo;</span><br><span class="line"></span><br><span class="line">        index index.html index.htm;</span><br><span class="line">        ssl_certificate cert/xxx.xxx.pem;  #需要将cert-file-name.pem替换成</span><br><span class="line">已上传的证书文件的名称。</span><br><span class="line">        ssl_certificate_key cert/xxx.xxx.key; #需要将cert-file-name.key替&gt;换成已上传的证书密钥文件的名称。</span><br><span class="line">        ssl_session_timeout 5m;</span><br><span class="line">        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;</span><br><span class="line">    #表示使用的加密套件的类型。</span><br><span class="line">        ssl_protocols TLSv1 TLSv1.1 TLSv1.2; #表示使用的TLS协议的类型。</span><br><span class="line">        ssl_prefer_server_ciphers on;</span><br><span class="line"></span><br><span class="line">        # Load configuration files for the default server block.</span><br><span class="line">        include /etc/nginx/default.d/*.conf;</span><br></pre></td></tr></table></figure><p>如此一来，路由便配置完成，重启nginx，便会立即生效。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx -s reload </span><br></pre></td></tr></table></figure><p>访问时便可以通过公网ip或https+域名访问了（如果用域名访问，必须先备案，再解析到服务器ip）</p><h3 id="配置git并连接本地"><a href="#配置git并连接本地" class="headerlink" title="配置git并连接本地"></a>配置git并连接本地</h3><p>配置git的原因是，当我们发布博客时，便能够像部署到github或者gitee一样，通过命令就能一步部署。</p><p>先安装node.js</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl -sL https://rpm.nodesource.com/setup_10.x | bash -</span><br><span class="line">yum install -y nodejs</span><br></pre></td></tr></table></figure><p>再安装git</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install git</span><br></pre></td></tr></table></figure><p>配置一个git用户并修改权限:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">adduser git</span><br><span class="line">chmod 740 /etc/sudoers</span><br><span class="line">vi /etc/sudoers</span><br></pre></td></tr></table></figure><p>按图找到并添加框中语句：</p><p><img src="https://ccs-zone.oss-cn-beijing.aliyuncs.com/105/image-20210816124538349.png"></p><p>保存退出，将权限改回：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 400 /etc/sudoers</span><br></pre></td></tr></table></figure><p>设置git用户密码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo passwd git</span><br></pre></td></tr></table></figure><p>在~目录生成公钥密钥文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">su git</span><br><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line">mkdir .ssh</span><br><span class="line"><span class="built_in">cd</span> .ssh</span><br><span class="line">ssh-keygen</span><br></pre></td></tr></table></figure><p>然后再.ssh文件夹中就会出现两个文件：id_rsa 和 id_rsa.pub。</p><p>id_rsa.pub是公钥文件，将其复制一份改名为authorized_keys</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp id_rsa.pub authorized_keys</span><br></pre></td></tr></table></figure><p>修改权限：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chmod 600 ~/.ssh/authorized_keys</span><br><span class="line">chmod 700 ~/.ssh</span><br></pre></td></tr></table></figure><p>确保上面无误后完，在本地电脑上打开CMD连接服务器:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -v git@云服务器的公网ip</span><br></pre></td></tr></table></figure><p>然后按提示操作即可，中途会要求输密码。完成后显示：Welcome to Alibaba Cloud Elastic Compute Service !，表明登录成功。</p><p>完成后返回到云服务器端。</p><p>我们需要创建一个钩子用来连接git仓库和博客仓库。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line">git init --bare blog.git</span><br><span class="line">vim ~/blog.git/hooks/post-receive</span><br></pre></td></tr></table></figure><p>在文件中写入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git --work-tree=/home/hexo --git-dir=/home/git/blog.git checkout -f</span><br></pre></td></tr></table></figure><p>其中，work-tree后的地址是你博客目录存放的地址，不能写错。</p><p>完成后退出，赋权：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x ~/blog.git/hooks/post-receive</span><br></pre></td></tr></table></figure><h3 id="修改本地config-yml"><a href="#修改本地config-yml" class="headerlink" title="修改本地config.yml"></a>修改本地config.yml</h3><p>在站点根目录打开config.yml:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  branch: master</span><br><span class="line">  <span class="built_in">type</span>:  git</span><br><span class="line">  repo:  git@服务器公网ip:/home/git/blog.git</span><br></pre></td></tr></table></figure><p>然后执行hexo三连。</p><p>deploy过程可能会遇到输入密码，密码是服务器管理员密码。</p><p>至此，便完成了所有配置，理论上便能通过设置的域名或者公网ip访问到博客了。</p><h2 id="一种简单部署方式（不推荐）"><a href="#一种简单部署方式（不推荐）" class="headerlink" title="一种简单部署方式（不推荐）"></a>一种简单部署方式（不推荐）</h2><p>如果你已经知道nginx的用法，也知道hexo博客最终显示的是public文件夹下的文件，那么就有了这种部署方式。</p><p>即直接将生成好的博客下的public文件夹整个上传至服务器，并用nignx部署即可，同样也能成功部署博客（本站的引导页即是用这种方式部署）。</p><p>优点：不需要经过上面的繁琐步骤，快速就能将博客部署到服务器。</p><p>缺点：毫无疑问，每次修改博客就麻烦了，都需要修改服务器上的文件，显然不适用于需要持续修改的博客，所以建议还是使用上面的部署方式吧，一劳永逸。</p><h2 id="可能遇到的问题"><a href="#可能遇到的问题" class="headerlink" title="可能遇到的问题"></a>可能遇到的问题</h2><p>1、配置完成后访问博客显示是403？</p><p>尝试方法：检查钩子中博客目录存放地址是否写错，博客下有无文件。</p><p>2、部署成功但是博客目录下没有文件？</p><p>尝试方法：检查是否给博客目录赋权，然后重新执行hexo三连。如果能成功部署，尝试本地clone服务器仓库看看能否成功。</p><p>3、部署后显示网站拒绝访问？</p><p>尝试方法：检查nginx监听端口是否为443，并是否添加了证书。如果是80端口，会因为浏览器默认强制使用http而导致不能访问（只能使用http访问）</p><h2 id="nginx一些常用命令"><a href="#nginx一些常用命令" class="headerlink" title="nginx一些常用命令"></a>nginx一些常用命令</h2><h3 id="开启、重启和关闭"><a href="#开启、重启和关闭" class="headerlink" title="开启、重启和关闭"></a>开启、重启和关闭</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">systemctl start nginx %开启服务器</span><br><span class="line"></span><br><span class="line">nginx -s reload %重启服务器</span><br><span class="line"></span><br><span class="line">nginx -s stop %关闭服务器</span><br><span class="line"></span><br><span class="line"><span class="built_in">kill</span> -9 nginx %强制停止开启、重启和关闭</span><br></pre></td></tr></table></figure><h3 id="开启并查看运行日志"><a href="#开启并查看运行日志" class="headerlink" title="开启并查看运行日志"></a>开启并查看运行日志</h3><p>服务器成功运行后，能够看到它的运行情况是很重要的，nginx提供了专门的运行日志accsee.log和错误日志error.log，但前者通常默认没有配置，因此需要修改。</p><p>首先修改配置文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/nginx/nginx.conf</span><br></pre></td></tr></table></figure><p>在https字段中添加如下这一行代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">access_log  /etc/nginx/logs/access.log  main;</span><br></pre></td></tr></table></figure><p>其中的/etc/nginx/logs/access.log，改为你想保存的路径即可。然后重启服务器。</p><p>然后只需要打开access.log这个文件，便能查看访问日志。</p><p>nginx在nginx.conf配置文件中默认添加了error.log，只需要在开头几行语句找到它把路径修改即可。</p><p>提供一些相关常用命令：</p><p>统计ip访问量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span> access.log |sort | uniq -c | sort -n -r</span><br></pre></td></tr></table></figure><p>access.log日志只显示统计的第一列 ip</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span> access.log</span><br></pre></td></tr></table></figure><p>nginx access.log日志统计第一列 ip ,排序 sort, 并去重 uniq -c ，去重后，根据访问次数重新\排序 sort -n\ ,实现 top排行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span> access.log |sort | uniq -c | sort -n</span><br></pre></td></tr></table></figure><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p>从零搭建Hexo博客并部署阿里云服务器（奶妈级教学）_Object的博客-CSDN博客_阿里云搭建hexo</p><p>(Nginx开启访问日志记录_weixin_30830327的博客-CSDN博客</p><p>根据nginx日志统计ip访问量_wudinaniya的博客-CSDN博客_nginx 统计ip。</p>]]></content>
      
      
      
        <tags>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>手把手教你修改butterfly主题的样式</title>
      <link href="2022/02/17/hexo-update/"/>
      <url>2022/02/17/hexo-update/</url>
      
        <content type="html"><![CDATA[<h3 id="提要"><a href="#提要" class="headerlink" title="提要"></a>提要</h3><p>很多小伙伴私信我，想让我谈谈主题样式如何修改，如何添加css和js。所以这里我特意写一文，进行说明，对<strong>主题修改</strong>主要以下两个方法：</p><ol><li>外部挂载代码（推荐）</li><li>直接修改源码</li></ol><p>我是推荐<strong>外部挂载代码</strong>的，原因是稳定性高，可以平滑升级，不到迫不得已不要修改源码。</p><h3 id="挂载方法"><a href="#挂载方法" class="headerlink" title="挂载方法"></a>挂载方法</h3><p>打开主题目录下的配置文件，找到以下代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#inject</span><br><span class="line">#插入代码到头部<span class="tag">&lt;/<span class="name">head</span>&gt;</span>之前 和 尾部<span class="tag">&lt;/<span class="name">body</span>&gt;</span>之前</span><br><span class="line">inject:</span><br><span class="line">  head:</span><br><span class="line">-<span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;挂载路径以及文件名&quot;</span>&gt;</span></span><br><span class="line">bottom:</span><br><span class="line">-<span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;挂载路径以及文件名&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>通常在<strong>head</strong>处挂载css代码，在bottom处挂载js代码</p><p>css代码通常放在<code>\Butterfly\source\css</code>目录下，js代码放在<code>\Butterfly\source\js</code>目录下</p><p>我的挂载配置如下，具体按照你的需求来</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># inject</span></span><br><span class="line"><span class="comment"># 插入代码到头部&lt;/head&gt;之前 和 尾部&lt;/body&gt;之前</span></span><br><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">head:</span></span><br><span class="line">   <span class="comment"># 背景</span></span><br><span class="line">   <span class="bullet">-</span> <span class="string">&lt;link</span> <span class="string">rel=&quot;stylesheet&quot;</span> <span class="string">href=&quot;/css/background.css&quot;&gt;</span></span><br><span class="line">   <span class="comment"># 外挂插件</span></span><br><span class="line">   <span class="bullet">-</span> <span class="string">&lt;link</span> <span class="string">rel=&quot;stylesheet&quot;</span> <span class="string">href=&quot;/css/VolantisTags.css&quot;&gt;</span></span><br><span class="line">   <span class="comment"># 阿里图标</span></span><br><span class="line">   <span class="bullet">-</span> <span class="string">&lt;link</span> <span class="string">rel=&quot;stylesheet&quot;</span> <span class="string">href=&quot;/css/iconfont.css&quot;&gt;</span></span><br><span class="line">  <span class="attr">bottom:</span></span><br><span class="line">   <span class="comment"># 折叠</span></span><br><span class="line">   <span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">src=&quot;/js/classify.js&quot;&gt;&lt;/script&gt;</span></span><br><span class="line">   <span class="comment"># 背景</span></span><br><span class="line">   <span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">src=&quot;/js/background.js&quot;&gt;&lt;/script&gt;</span></span><br><span class="line">   <span class="comment"># 外挂插件</span></span><br><span class="line">   <span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">src=&quot;/js/VolantisTags.js&quot;&gt;&lt;/script&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h3><p><img src="https://img-blog.csdnimg.cn/20200527232516208.png?%E2%80%A6mV0L2hvd2FyZXlvdTIxMDQ=,size_16,color_FFFFFF,t_70"></p><p><img src="https://img-blog.csdnimg.cn/20200527232238423.png?%E2%80%A6mV0L2hvd2FyZXlvdTIxMDQ=,size_16,color_FFFFFF,t_70"></p><p><strong>最后</strong>在主题配置文件中挂载即可，注意格式</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># inject</span></span><br><span class="line"><span class="comment"># 插入代码到头部&lt;/head&gt;之前 和 尾部&lt;/body&gt;之前</span></span><br><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">head:</span></span><br><span class="line">   <span class="comment"># 外挂插件的css</span></span><br><span class="line">   <span class="bullet">-</span> <span class="string">&lt;link</span> <span class="string">rel=&quot;stylesheet&quot;</span> <span class="string">href=&quot;/css/VolantisTags.css&quot;&gt;</span></span><br><span class="line">  <span class="attr">bottom:</span></span><br><span class="line">   <span class="comment"># 外挂插件的js</span></span><br><span class="line">   <span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">src=&quot;/js/VolantisTags.js&quot;&gt;&lt;/script&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>学会了吗？</p>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Hexo和Github搭建个人博客</title>
      <link href="2022/02/16/creat-hexo-blog/"/>
      <url>2022/02/16/creat-hexo-blog/</url>
      
        <content type="html"><![CDATA[<p>仅为个人经验总结，应该有更好的搭建方式。建议：最好至少要具备一定的前端知识。</p><h4 id="准备工具"><a href="#准备工具" class="headerlink" title="准备工具"></a>准备工具</h4><p>在开始配置之前。需要下载一下几个程序：</p><p>1、Git</p><p>2、node</p><p>3、Typora （推荐，用来编辑博客，可用其他编辑器，也可搭建完成后再安装）建议直接到官网下载。</p><p>4、一个代码编辑器，推荐VScode，用于修改配置文件时使用。</p><h4 id="开始配置"><a href="#开始配置" class="headerlink" title="开始配置"></a>开始配置</h4><p>windows10使用控制终端操作，快捷键：win+R，搜索cmd打开</p><p>1、安装node后可以通过如下命令检查是否安装成功：</p><p>node -v #查看node版本<br>npm -v #查看npm版本</p><p>2、安装淘宝的cnpm</p><p>npm install -g cnpm –registry=<a href="http://registry.npm.taobao.org/">http://registry.npm.taobao.org</a></p><p>检查版本：</p><p>cnpm -v</p><p>3、安装hexo框架</p><p>cnpm install -g hexo-cli</p><p>检查版本：</p><p>hexo -v</p><p>4、在任意位置创建blog文件夹（名字也随意，不一定是blog），用来放本地博客的数据和文件。如我在H盘创建了blog，地址如：H:\blog。</p><p>创建完成后，打开Git CMD（Git正确安装的话，应该在开始菜单内）</p><p>使用命令进入创建的这个blog文件夹，例如：</p><p>C:\Users\cai’cheng&gt;H:</p><p>H:&gt;cd blog\</p><p>无误后输入如下代码，进行配置（此步可能花费很长时间，如失败或退出，删除该这个blog文件夹，重来）：</p><p>hexo init</p><p>待出现 “Start blogging with Hexo！”后，即代表成功。此时blog下会出现很多文件（大概八个），这就是以后操作博客的地方。</p><p>5、验证是否成功：</p><p>hexo s #启动服务</p><p>（1）待出现提示”Hexo is running at <a href="http://localhost:4000/">http://localhost:4000</a>. Press Ctrl+C to stop”后即代表成功，其他提示则错。</p><p>（2）打开浏览器地址栏输入localhost:4000，出现hexo的页面则代表你的blog创建成功，但这一步是本地预览，还未托管成功，别人在网上看不到。如下：</p><p><img src="https://cdn.jsdelivr.net/gh/caicheng918/CDN@4.0/102/20200313180932972.png"></p><p>注：如第（1）步成功，第（2）步失败，代表4000端口被占用，返回Git CMD先按Ctrl+C退出服务，输入：</p><p>hexo s -p 5000 #以5000端口启动服务</p><p>再在浏览器输入localhost:5000，就能进入页面。</p><h4 id="上传到Github-Pages"><a href="#上传到Github-Pages" class="headerlink" title="上传到Github Pages"></a>上传到Github Pages</h4><p>1、首先安装插件：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git –save</span><br></pre></td></tr></table></figure><p>2、、在自己的<a href="https://github.com/">Github</a>主页创建一个新的repository。创建的repository的名字必须为 yourname.github.io。注意替换yourname。</p><p>3、设置Git的SSH。</p><p>回到博客根目录的git bash中，输入</p><p>git config –global user.name “yourname”<br>git config –global user.email “youremail”</p><p>然后创建SSH,一路回车</p><p>ssh-keygen -t rsa -C “youremail”</p><p>成功生成后一般会在C盘user文件夹里找到.ssh这个文件夹，里面的id_rsa.pub文件就是SSH密钥。</p><p>将这个密钥复制下来，在Github的SSH设置里面填入这个密钥，保存后才能部署成功</p><p>4、在本地hexo目录下的config_yml里定位到deploy编辑成如下格式，注意冒号有一个空格，必须严格按照格式填写。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Ydeploy:</span><br><span class="line">   type:  git </span><br><span class="line">   repository:  http://github.com/yourname/yourname.github.io.git</span><br><span class="line">   branch:  master</span><br></pre></td></tr></table></figure><p>5、需要部署时在博客根目录Git bush使用以下三件套命令：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean #清除缓存</span><br><span class="line">hexo g #生成静态文件</span><br><span class="line">hexo d #推送到远端仓库</span><br></pre></td></tr></table></figure><p>6、本地测试时在博客根目录Git bush使用命令：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>出现Hexo is running at <a href="http://localhost:4000/">http://localhost:4000</a> . Press Ctrl+C to stop.时则可以在浏览器打开<a href="http://localhost:4000进行测试。">http://localhost:4000进行测试。</a></p><p>如果在浏览器不能打开<a href="http://localhost:4000，则代表4000端口被占用，需要使用其他端口，以5000为例：">http://localhost:4000，则代表4000端口被占用，需要使用其他端口，以5000为例：</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s -p 5000 #以端口5000进行本地测试。</span><br></pre></td></tr></table></figure><p>本地测试时可以改动博客的代码或文件，仅需在浏览器刷新就能看到改动，因此更新博客时最好在本地测试无误后再上传。</p><h4 id="编写博客并上传"><a href="#编写博客并上传" class="headerlink" title="编写博客并上传"></a>编写博客并上传</h4><p>1、如果没安装，可以安装Typora了，这是一个常用的编辑器，具体功能自行探索。</p><p>2、安装好后，在blog根目录下打开Git Bush Here，（下文均默认此操作），输入新建文章命令：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo n &quot;文章名&quot; #生成一篇文章</span><br></pre></td></tr></table></figure><p>此时，会在source文件夹里的_posts文件夹里生成 “第一篇文章.md”的文件，双击它可调用Typora进行编写。</p><p>其中，title是文章标题，time是生成时间，tags是标签（没有tags暂时不管），然后是正文。编写完后即保存。</p><p>注：当你编辑一个新文件完成后，必须将此文件保存到/blog/source/_posts/路径下，不然不能上传博客。</p><p>在Git Bush Here里面输入：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>即可更新到github。</p><h4 id="使用Vercel部署并绑定域名"><a href="#使用Vercel部署并绑定域名" class="headerlink" title="使用Vercel部署并绑定域名"></a>使用Vercel部署并绑定域名</h4><p>使用Vercel部署的好处一是快，二是每当push到github时，Vercel会自动同步，省去了手动部署的麻烦，部署完成还会发送邮件通知。</p><p>1、前往<a href="https://vercel.com/%E6%B3%A8%E5%86%8C%EF%BC%8C%E6%B3%A8%E5%86%8C%E6%97%B6%E9%80%89%E6%8B%A9%E7%BB%91%E5%AE%9Agithub%E3%80%82">https://vercel.com/注册，注册时选择绑定github。</a></p><p>2、创建新项目，选择导入github的博客仓库。</p><p>3、在域名提供商处将域名解析到Vercel的DNS地址。</p><p>4、在setting里选择domain，填入自己的域名，确定。</p><p>5、过一会便能通过此域名访问博客。更新时只需要照常hexo d到github即可，Vercel会自动同步部署。</p><h4 id="更改主题"><a href="#更改主题" class="headerlink" title="更改主题"></a>更改主题</h4><p>由于建立博客后的初始主题很难看，所以应当换个主题。不同的主题配置方式都不太相同，需要自己修改主题配置文件，所以需要自己去动手了解。官方主题网站：<a href="https://hexo.io/themes/">https://hexo.io/themes/</a> ， 选择好后跳转到github下载。好看的有butterfly，next等。以Jerry开发的主题butterfly为例：</p><p><img src="https://cdn.jsdelivr.net/gh/caicheng918/CDN@4.0/102/image-20201129220151788.png"></p><p>在GitHub下载ZIP文件后（或者本地clone仓库），解压。</p><p>将文件夹复制到/blog/themes下，然后回到blog\根目录下，用记事本打开_config.yml文件，在最后找到这三行代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Extensions</span><br><span class="line">Plugins: https://hexo.io/plugins/</span><br><span class="line">Themes: https://hexo.io/themes/</span><br><span class="line">theme: butterfly</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/caicheng918/CDN@4.0/102/image-20201129220401269.png"></p><p>将上方theme后的代码改为下载主题的 文件夹的文件名，其他不改，注意空格，如改为Next主题：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">CODE</span><br><span class="line">Extensions</span><br><span class="line">Plugins: https://hexo.io/plugins/</span><br><span class="line">Themes: https://hexo.io/themes/</span><br><span class="line">theme: Next</span><br></pre></td></tr></table></figure><p>Extensions</p><p>Plugins: <a href="https://hexo.io/plugins/">https://hexo.io/plugins/</a></p><p>Themes: <a href="https://hexo.io/themes/">https://hexo.io/themes/</a></p><p>theme: Next<br>完成后点击保存。回到Git Bush Here输入：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">CODE</span><br><span class="line">hexo g#生成</span><br><span class="line">hexo d</span><br><span class="line">hexo clean#清理hexo缓存</span><br><span class="line">hexo g --d  #一键部署</span><br><span class="line">hexo g#生成</span><br><span class="line">hexo d</span><br><span class="line">hexo clean#清理hexo缓存</span><br><span class="line">hexo g --d  #一键部署。</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> vercel </tag>
            
            <tag> 教程 </tag>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="2022/02/01/hello-world/"/>
      <url>2022/02/01/hello-world/</url>
      
        <content type="html"><![CDATA[<p>欢迎来到 <a href="json25.tech">json25’s blog</a>! 这是一个基于hexo搭建的博客。</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><p>主题：butterfly</p>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
